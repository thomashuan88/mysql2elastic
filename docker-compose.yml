version: '3.9'
services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      TZ: Asia/Singapore
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: testdb
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    command:
      --default-authentication-plugin=mysql_native_password
      --binlog-format=ROW
      --server-id=1
      --log-bin=mysql-bin
      --binlog-do-db=testdb
      --gtid-mode=ON
      --enforce-gtid-consistency=ON

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    environment:
      TZ: Asia/Singapore
      KAFKA_BROKER_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: /kafka/data
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      CLUSTER_ID: dTX_RGSfSYeTEkylOLcJ9w
    ports:
      - "9092:9092"
      - "9093:9093"
    volumes:
      - ./kafka_data:/kafka/data:rw

  kafka-connect:
    image: debezium/connect:2.4
    container_name: kafka-connect
    depends_on:
      - kafka
      - mysql
    volumes:
      - ./connect:/kafka/connect
    environment:
      TZ: Asia/Singapore
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: debezium_configs
      OFFSET_STORAGE_TOPIC: debezium_offsets
      STATUS_STORAGE_TOPIC: debezium_status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_PRODUCER_INTERCEPTORS: io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor
      CONNECT_CONSUMER_INTERCEPTORS: io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor
    ports:
      - "8083:8083"

  # kafka-connect-es:
  #   build:
  #     context: ./es_conn
  #     dockerfile: Dockerfile
  #   # image: confluentinc/cp-kafka-connect:latest
  #   container_name: kafka-connect-es
  #   depends_on:
  #     - kafka
  #     - kafka-connect
  #     - elasticsearch
  #   environment:
  #     TZ: Asia/Singapore
  #     CONNECT_BOOTSTRAP_SERVERS: kafka:9092
  #     # CONNECT_REST_PORT: 8084

  #     CONNECT_REST_ADVERTISED_HOST_NAME: "192.168.137.5:8084"
  #     CONNECT_GROUP_ID: kafka-connect-es
  #     CONNECT_CONFIG_STORAGE_TOPIC: es_configs
  #     CONNECT_OFFSET_STORAGE_TOPIC: es_offsets
  #     CONNECT_STATUS_STORAGE_TOPIC: es_status
  #     CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
  #     CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
  #     CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
  #     CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
  #     CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
  #     CONNECT_PLUGIN_PATH: /usr/share/java,/usr/share/confluent-hub-components
  #     CONNECT_PRODUCER_INTERCEPTORS: io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor
  #     CONNECT_CONSUMER_INTERCEPTORS: io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor
  #   ports:
  #     - "8084:8083"   

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
    container_name: elasticsearch
    environment:
      TZ: Asia/Singapore
      discovery.type: single-node
      xpack.security.enabled: false
    ports:
      - "9200:9200"
      - "9300:9300"

volumes:
  mysql_data:
